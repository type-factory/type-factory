<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.typefactory</groupId>
  <artifactId>type-factory</artifactId>
  <version>1.0.2-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Type Factory</name>
  <description>Type Factory provides a set of libraries designed to make creating custom data types easy.</description>
  <url>https://github.com/type-factory/type-factory</url>

  <licenses>
    <license>
      <name>The Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Evan Toliopoulos</name>
      <email>evantoli+info@typefactory.org</email>
      <organizationUrl>https://github.com/type-factory/type-factory</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:type-factory/type-factory.git</connection>
    <developerConnection>scm:git:git@github.com:type-factory/type-factory.git</developerConnection>
    <url>https://github.com/type-factory/type-factory</url>
  </scm>

  <properties>
    <maven.deploy.skip>true</maven.deploy.skip>

    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <maven.compiler.parameters>true</maven.compiler.parameters>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <junit-jupiter.version>5.13.1</junit-jupiter.version>
    <junit-platform-reporting.version>1.13.0-M3</junit-platform-reporting.version>
    <assertj-core.version>3.27.3</assertj-core.version>
    <mockito-bom.version>5.17.0</mockito-bom.version>
    <icu4j.version>77.1</icu4j.version>

    <sonar.organization>type-factory</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>

    <sonar.issue.ignore.multicriteria>e1,e2</sonar.issue.ignore.multicriteria>

    <!-- SonarCloud - Constructors should not have too many parameters -
         We employ builders to create classed which results in constructors with many parameters -->
    <sonar.issue.ignore.multicriteria.e1.ruleKey>java:S107</sonar.issue.ignore.multicriteria.e1.ruleKey>
    <sonar.issue.ignore.multicriteria.e1.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e1.resourceKey>

    <!-- SonarCloud - Cognitive Complexity of methods should not be too high -
         Where there is "cognitive complexity", I believe it is justified.
         I have take care to ensure that the code is readable and understandable. -->
    <sonar.issue.ignore.multicriteria.e2.ruleKey>java:S3776</sonar.issue.ignore.multicriteria.e2.ruleKey>
    <sonar.issue.ignore.multicriteria.e2.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e2.resourceKey>
  </properties>

  <modules>
    <module>type-factory-examples</module>
    <module>type-factory-language-code-generator</module>
    <module>type-factory-language</module>
    <module>type-factory-core</module>
    <module>type-factory-test-assertj</module>
    <module>type-factory-bom</module>
  </modules>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.typefactory</groupId>
        <artifactId>type-factory-core</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.typefactory</groupId>
        <artifactId>type-factory-examples</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.typefactory</groupId>
        <artifactId>type-factory-language-code-generator</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.typefactory</groupId>
        <artifactId>type-factory-language</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.typefactory</groupId>
        <artifactId>type-factory-test-assertj</artifactId>
        <version>${project.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-reporting</artifactId>
        <version>${junit-platform-reporting.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-bom</artifactId>
        <version>${mockito-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj-core.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.ibm.icu</groupId>
        <artifactId>icu4j</artifactId>
        <version>${icu4j.version}</version>
      </dependency>

      <dependency>
        <groupId>com.ibm.icu</groupId>
        <artifactId>icu4j-charset</artifactId>
        <version>${icu4j.version}</version>
      </dependency>

      <dependency>
        <groupId>com.ibm.icu</groupId>
        <artifactId>icu4j-localespi</artifactId>
        <version>${icu4j.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>5.1.0.4751</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.11.2</version>
        <configuration>
          <nohelp>true</nohelp>
          <doclint>none</doclint>
          <detectLinks>false</detectLinks>
          <detectJavaApiLink>true</detectJavaApiLink>
          <failOnWarnings>false</failOnWarnings>
          <failOnError>false</failOnError>
          <docfilessubdirs>true</docfilessubdirs>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.13</version>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.3</version>
        <configuration>
          <forkCount>1C</forkCount>
          <reuseForks>true</reuseForks>
          <includes>
            <include>**/Test*.java</include>
            <include>**/*Test.java</include>
            <include>**/*Test_*.java</include>
            <include>**/*Tests.java</include>
            <include>**/*TestCase.java</include>
            <include>**/*TestCases.java</include>
          </includes>
          <systemPropertyVariables>
            <java.util.logging.config.file>${project.basedir}/src/test/resources/logging.properties</java.util.logging.config.file>
          </systemPropertyVariables>
          <properties>
            <configurationParameters>
              junit.platform.reporting.open.xml.enabled=true
              junit.platform.reporting.output.dir=${project.build.directory}/surefire-reports
            </configurationParameters>
          </properties>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>1.7.0</version>
        <executions>
          <execution>
            <!-- enable flattening -->
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
            <configuration>
              <!-- We want to keep the following POM elements in the flattened POM files because Sonatype Maven Central requires them -->
              <pomElements><name/><description/><url/><scm/><developers/><contributors/></pomElements>
            </configuration>
          </execution>
          <execution>
            <!-- ensure proper cleanup -->
            <id>flatten.clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.0</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.1.4</version>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>publish</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.2.7</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
                <configuration>
                  <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                  </gpgArguments>
                  <!--suppress UnresolvedMavenProperty -->
                  <keyname>${env.GPG_KEY_ID}</keyname>
                  <!--suppress UnresolvedMavenProperty -->
                  <passphrase>${env.GPG_PASSPHRASE}</passphrase>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


</project>