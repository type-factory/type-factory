# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java build

on:
  push:
    branches:
      - 'main'
      - 'release*'
  pull_request:
    branches:
      - 'main'
      - 'release*'
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - id: checkout-code
        name: Checkout code
        uses: actions/checkout@v4
        with:
          # 0 indicates all history â€“ avoid shallow clone for SonarCloud analysis
          fetch-depth: 0
      - id: setup-java-17
        name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        id: build-with-maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # Dependabot doesn't have access to GitHub secrets so we can't run SonarCloud analysis for PRs from dependabot
        run: |
          if [ ${{ github.actor }} == 'dependabot[bot]' ] ; then
            mvn --batch-mode verify
          else
            mvn --batch-mode verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=type-factory_type-factory -Dsonar.organization=type-factory
          fi
