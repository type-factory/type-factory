# This workflow will build a package using Maven and then publish it to to the Maven Central Repository when a release is created
# For more information see: 
# - https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-maven
# - https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish to Maven Central Repository

on:
  workflow_dispatch:

jobs:
  publish:

    # Check that this is being executed on 'main' or a 'release-N.x.x' branch
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-')
    runs-on: ubuntu-latest
    steps:

      - id: checkout-code
        name: Checkout code
        uses: actions/checkout@v3

      - id: setup-java-and-maven-settings
        name: Set up Java and Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          # The following creates a <server> block in the Maven settings.xml
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD

      - id: import-gpg-key
        name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          passphrase: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - id: build-and-verify-with-maven
        name: Build and verify with Maven
        run: mvn --batch-mode --activate-profiles publish -Djava.util.logging.config.file="./.github/workflows/config/logging.properties" clean verify

      - id: publish-to-central
        name: Publish to Maven Central Repository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_KEY_ID: ${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        shell: bash
        run: |
          echo &&
          CURRENT_VERSION="$(mvn --batch-mode --quiet -Dexpression=project.version -DforceStdout help:evaluate)" &&
          echo "CURRENT_VERSION=${CURRENT_VERSION}" &&
          if [[ ${CURRENT_VERSION} == *SNAPSHOT ]] ; then
          VERSION_TYPE="SNAPSHOT" &&
          echo "VERSION_TYPE=${VERSION_TYPE}"
          else
          VERSION_TYPE="RELEASE" &&
          RELEASE_TAG="v${CURRENT_VERSION}" &&
          echo "VERSION_TYPE=${VERSION_TYPE}" &&
          echo "RELEASE_TAG=${RELEASE_TAG}"
          fi &&
          echo &&
          echo "Deploying the application to Maven Central" &&
          mvn --batch-mode --activate-profiles publish -Dmaven.test.skip=true -Djava.util.logging.config.file="./.github/workflows/config/logging.properties" deploy &&
          echo &&
          if [[ ${VERSION_TYPE} == "RELEASE" ]] ; then
          CURRENT_PATCH_VERSION="${CURRENT_VERSION##*.}" &&
          NEXT_SNAPSHOT_VERSION="${CURRENT_VERSION%.*}.$((CURRENT_PATCH_VERSION + 1))-SNAPSHOT" &&
          NEW_BRANCH_NAME="set-new-version-${NEXT_SNAPSHOT_VERSION}" &&
          echo &&
          echo "NEXT_SNAPSHOT_VERSION=${NEXT_SNAPSHOT_VERSION}" &&
          echo "NEW_BRANCH_NAME=${NEW_BRANCH_NAME}" &&
          echo &&
          echo "Creating and checking out new branch ${NEW_BRANCH_NAME}" &&
          git checkout -b "${NEW_BRANCH_NAME}" &&
          echo &&
          echo "Update version to ${NEXT_SNAPSHOT_VERSION} – version was ${CURRENT_VERSION}" &&
          mvn --batch-mode --quiet -DnewVersion="${NEXT_SNAPSHOT_VERSION}" -DprocessAllModules=true versions:set &&
          echo &&
          echo "Committing to local branch" &&
          git commit --gpg-sign --all --message "Update version to ${NEXT_SNAPSHOT_VERSION} – version was ${CURRENT_VERSION}" &&
          git verify-commit HEAD &&
          echo &&
          echo "Maven package-verify the application" &&
          mvn --batch-mode -Djava.util.logging.config.file="./.github/workflows/config/logging.properties" verify &&
          echo &&
          echo "Pushing commit to GitHub – version ${NEXT_SNAPSHOT_VERSION} on branch ${NEW_BRANCH_NAME}" &&
          git push --set-upstream origin "${NEW_BRANCH_NAME}" &&
          echo &&
          echo "Pushed commit to GitHub – version ${NEXT_SNAPSHOT_VERSION} on branch ${NEW_BRANCH_NAME}"
          fi &&
          echo
