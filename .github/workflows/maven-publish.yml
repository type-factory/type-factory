# This workflow will build a package using Maven and then publish it to to the Maven Central Repository when a release is created
# For more information see: 
# - https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-maven
# - https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish to Maven Central Repository

on:
  release:
    types: [created]

inputs:
  RELEASE_VERSION_NUMBER_OVERRIDE:
    description: 'Optional override release version number'
    required: false
  NEXT_VERSION_NUMBER_OVERRIDE:
    description: 'Optional override next version number'
    required: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - id: checkout-code
        name: Checkout code
        uses: actions/checkout@v3
      - id: setup-java-and-maven-settings  
        name: Set up Java and Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          # The following creates a <server> block in the Maven settings.xml
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
      - id: build-and-verify-with-maven
        name: Build and verify with Maven
        run: mvn --batch-mode --file pom.xml clean verify
      - id: install-gpg-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - id: publish-to-central
        name: Publish to Maven Central Repository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          CURRENT_VERSION="$(mvn --batch-mode --quiet help:evaluate -Dexpression=project.version -DforceStdout)"
          NEW_VERSION="${CURRENT_VERSION%-SNAPSHOT}"
          if [ "${RELEASE_VERSION_NUMBER_OVERRIDE}" -z ] ; then
            NEW_VERSION="${RELEASE_VERSION_NUMBER_OVERRIDE%-SNAPSHOT}"
          fi &&
          mvn --batch-mode --quiet versions:set -DnewVersion="${NEW_VERSION}" &&
          mvn \
          --no-transfer-progress \
          --batch-mode \
          -Dgpg.keyname=${{ secrets.OSSRH_GPG_SECRET_KEY_ID }} \
          -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
          deploy:deploy
